Cross platform mobile application development has never been easier!
Right, maybe it seems too much offensive but I assure you that it's much more easy these days. Especially for Javascript developers.
With <a href="http://phonegap.com" rel="no-follow">Phonegap</a>, you can develop applications on <strong>iPhone/iTouch</strong>, <strong>Android</strong>, <strong>Blackberry</strong>, <strong>Palm</strong>, <strong>Windows Mobile</strong> and <strong>Symbian</strong>. All features are not available for all of these platforms yet but you can develop really good applications on <strong>iPhone</strong> and <strong>Android</strong>.
At that point, the question is that <em>"How can we make our Phonegap applications look more iPhone/Android style?"</em> We have different solutions for that.
<ul>
	<li>Sencha Touch</li>
	<li>jQuery Mobile</li>
	<li>jQTouch</li>
</ul>
You can try and learn how to use them yourself. Here, I'm going to talk about <a href="http://www.sencha.com/products/touch/" rel="no-follow">Sencha Touch</a>. With Sencha Touch, you can make iPhone/Android applications look like just native applications. Same components, same behaviours, etc. Becides all you need to do is  nothing but using your experience on Javascript.
In this article, I'm going to help you to create your first cross platform mobile application with <em>Phonegap</em>, <em>Sencha Touch</em> and <em>Flickr API</em>.

You can find whole source code at <a href="https://github.com/naimon/iFlickr" rel="no-follow">Github</a>.

We're starting with <a href="http://dev.sencha.com/deploy/touch/docs/" rel="no-follow">Sencha Touch</a> part. Sencha Touch development is based on hierarchical components architecture. You check the components on their offical API documentation website. In this sample application, I have a few Panel components as containers and some buttons for actions. To communicate with Flickr REST API, we need permission from the user. For that purpose, I created Settings page.
<img src="http://umut.mobi/blog/wp-content/uploads/2010/10/about.jpg" alt="" title="about" width="322" height="482" class="aligncenter size-full wp-image-95" />
<img src="http://umut.mobi/blog/wp-content/uploads/2010/10/start.jpg" alt="" title="start" width="322" height="482" class="aligncenter size-full wp-image-99" />
<img src="http://umut.mobi/blog/wp-content/uploads/2010/10/flickr.jpg" alt="" title="flickr" width="322" height="482" class="aligncenter size-full wp-image-98" />
<img src="http://umut.mobi/blog/wp-content/uploads/2010/10/complete.jpg" alt="" title="complete" width="322" height="482" class="aligncenter size-full wp-image-97" />
<img src="http://umut.mobi/blog/wp-content/uploads/2010/10/camera.jpg" alt="" title="camera" width="322" height="482" class="aligncenter size-full wp-image-96" />
There is also SQLite implementation for storing session data. You can find the source code of it at <a href="http://gist.github.com/581052" rel="no-follow">Gist</a>. To provide Flickr implementation I just created a Javascript client which is also available in source code. It's hardly depended to some part of my application but with a few modification you can make it work for your own applications.
In Phonegap part of the application I use camera feature. As on <a href="http://docs.phonegap.com/phonegap_camera_camera.md.html#camera.getPicture" rel="no-follow">that page</a> we can reach camera via Phonegap.
In the end, all we need to do is install our web based cross platform mobile application to our device through Phonegap.